// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.RunsSimulation = (function() {
    function RunsSimulation(universe) {
      this.universe = universe;
      this.tick = __bind(this.tick, this);
      this.running = __bind(this.running, this);
      this.pause = __bind(this.pause, this);
      this.play = __bind(this.play, this);
      this.setLabelText = __bind(this.setLabelText, this);
      this.setDeltaT = __bind(this.setDeltaT, this);
      this.toggleRunning = __bind(this.toggleRunning, this);
      this.setDeltaT();
      this.setLabelText();
      this.play();
    }

    RunsSimulation.prototype.toggleRunning = function() {
      if (this.running()) {
        return this.pause();
      } else {
        return this.play();
      }
    };

    RunsSimulation.prototype.setDeltaT = function() {
      this.fps = 30;
      return this.dtInSeconds = 1 / this.fps;
    };

    RunsSimulation.prototype.setLabelText = function() {
      $("#fps").text(this.fps);
      return $("#dt").text(this.dtInSeconds.toFixed(4));
    };

    RunsSimulation.prototype.play = function() {
      var dtInMilliseconds;
      dtInMilliseconds = this.dtInSeconds * 1000;
      return this.intervalId = setInterval(this.tick, dtInMilliseconds);
    };

    RunsSimulation.prototype.pause = function() {
      return this.intervalId = clearInterval(this.intervalId);
    };

    RunsSimulation.prototype.running = function() {
      return !!this.intervalId;
    };

    RunsSimulation.prototype.tick = function() {
      return this.universe.tick(this.dtInSeconds);
    };

    return RunsSimulation;

  })();

}).call(this);
