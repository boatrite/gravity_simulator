// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Universe = (function() {
    Universe.G = 1;

    function Universe() {
      this.drawBackground = __bind(this.drawBackground, this);
      this.drawAll = __bind(this.drawAll, this);
      this.updateAll = __bind(this.updateAll, this);
      this.tick = __bind(this.tick, this);
      this.addEntity = __bind(this.addEntity, this);
      this.entities = [];
      new GInput();
    }

    Universe.prototype.addEntity = function(entity) {
      return this.entities.push(entity);
    };

    Universe.prototype.tick = function(dt, context) {
      this.updateAll(dt);
      return this.drawAll(context);
    };

    Universe.prototype.updateAll = function(dt) {
      var entity, _i, _len, _ref, _results;
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(entity.update(dt, this.entities));
      }
      return _results;
    };

    Universe.prototype.drawAll = function(context) {
      var entity, _i, _len, _ref, _results;
      this.drawBackground(context);
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(entity.draw(context));
      }
      return _results;
    };

    Universe.prototype.drawBackground = function(context) {
      var space;
      space = $("#space")[0];
      context.fillStyle = 'black';
      return context.fillRect(0, 0, space.width, space.height);
    };

    return Universe;

  })();

}).call(this);
