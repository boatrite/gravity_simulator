// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Entity = (function() {
    function Entity(options) {
      this.draw = __bind(this.draw, this);
      this.update = __bind(this.update, this);
      this.mass = options.mass || 1;
      this.radius = options.radius || 10;
      this.position = options.position || new Vector(0, 0);
      this.velocity = options.velocity || new Vector(0, 0);
      this.color = options.color || 'white';
    }

    Entity.prototype.update = function(dt, entities) {
      var accel, accel_dir, center, centripetal_accel, tangential_velocity;
      dt /= 1000;
      center = new Vector(500, 200);
      accel_dir = center.subtract(this.position).normalize();
      tangential_velocity = this.velocity.length();
      centripetal_accel = tangential_velocity * tangential_velocity / 125;
      accel = accel_dir.times(centripetal_accel);
      this.velocity = this.velocity.add(accel.times(dt));
      return this.position = this.position.add(this.velocity.times(dt));
    };

    Entity.prototype.draw = function(context) {
      return new Circle(this.position, this.radius, this.color).draw(context);
    };

    return Entity;

  })();

}).call(this);
