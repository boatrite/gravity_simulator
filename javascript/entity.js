// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Entity = (function() {
    function Entity(options) {
      this.drawPath = __bind(this.drawPath, this);
      this.drawBody = __bind(this.drawBody, this);
      this.buildFromOptions = __bind(this.buildFromOptions, this);
      this.draw = __bind(this.draw, this);
      this.update = __bind(this.update, this);
      this.buildFromOptions(options);
      this.acceleration = new Vector(0, 0);
      this.netForce = new Vector(0, 0);
      this.path = new Path(this.position, 1000, this.color);
      this.markedForRemoval = false;
      this.entityDOMElements = new EntityDOMElements(this);
    }

    Entity.prototype.update = function(dt, netForce) {
      this.netForce = netForce;
      this.acceleration = this.netForce.divide(this.mass);
      this.velocity = this.velocity.add(this.acceleration.times(dt));
      this.position = this.position.add(this.velocity.times(dt));
      return this.path.continueTo(this.position);
    };

    Entity.prototype.draw = function() {
      this.entityDOMElements.draw();
      this.drawBody();
      return this.drawPath();
    };

    Entity.prototype.buildFromOptions = function(options) {
      this.mass = options.mass || 1;
      this.radius = options.radius || 10;
      this.position = options.position || new Vector(0, 0);
      this.velocity = options.velocity || new Vector(0, 80..randSign());
      this.color = options.color || '#ffffff';
      return this.name = options.name;
    };

    Entity.prototype.drawBody = function() {
      return new Circle(this.position, this.radius, this.color).draw();
    };

    Entity.prototype.drawPath = function() {
      return this.path.draw();
    };

    return Entity;

  })();

}).call(this);
