// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Runner = (function() {
    function Runner() {
      this.tick = __bind(this.tick, this);
      this.play = __bind(this.play, this);
      this.pause = __bind(this.pause, this);
      this.toggleRunning = __bind(this.toggleRunning, this);
      var earth, fps, height, space, sun, width;
      space = $('#space')[0];
      width = space.width;
      height = space.height;
      this.context = space.getContext('2d');
      this.universe = new Universe();
      sun = new Entity({
        name: 'sun',
        mass: 1000000,
        radius: 40,
        position: new Vector(width / 2, height / 2),
        velocity: new Vector(0, 0),
        color: '#ffe700'
      });
      this.universe.addEntity(sun);
      earth = new Entity({
        name: 'earth',
        mass: 1,
        radius: 10,
        position: new Vector(width / 2 + width / 8, height / 2),
        velocity: new Vector(0, -100),
        color: '#00fcff'
      });
      this.universe.addEntity(earth);
      fps = 50;
      this.dt = 1000 / fps;
      this.play();
      this.playButton = new PlayButton(this);
    }

    Runner.prototype.toggleRunning = function() {
      if (this.running) {
        this.playButton.pause();
        return this.pause();
      } else {
        this.playButton.play();
        return this.play();
      }
    };

    Runner.prototype.pause = function() {
      clearInterval(this.intervalId);
      return this.running = false;
    };

    Runner.prototype.play = function() {
      this.intervalId = setInterval(this.tick, this.dt);
      return this.running = true;
    };

    Runner.prototype.tick = function() {
      var dtInSeconds;
      dtInSeconds = this.dt / 1000;
      return this.universe.tick(dtInSeconds, this.context);
    };

    return Runner;

  })();

}).call(this);
