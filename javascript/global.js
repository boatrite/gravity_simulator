// Generated by CoffeeScript 1.7.1
(function() {
  window.randomColor = function() {
    return '#' + Math.floor(Math.random() * 16777215).toString(16);
  };

  window.canvas = function() {
    return document.getElementById('space');
  };

  window.$canvas = function() {
    return $(canvas());
  };

  window.context = function() {
    return canvas().getContext('2d');
  };

  window.forceRedraw = function() {
    return $canvas().trigger('forceRedraw');
  };

  window.getMouse = function(e) {
    var element, html, htmlLeft, htmlTop, mx, my, offsetX, offsetY, styleBorderLeft, styleBorderTop, stylePaddingLeft, stylePaddingTop;
    element = canvas();
    offsetX = 0;
    offsetY = 0;
    while (true) {
      if (!element) {
        break;
      }
      offsetX += element.offsetLeft;
      offsetY += element.offsetTop;
      element = element.offsetParent;
    }
    if (document.defaultView && document.defaultView.getComputedStyle) {
      stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(canvas(), null)['paddingLeft'], 10) || 0;
      stylePaddingTop = parseInt(document.defaultView.getComputedStyle(canvas(), null)['paddingTop'], 10) || 0;
      styleBorderLeft = parseInt(document.defaultView.getComputedStyle(canvas(), null)['borderLeftWidth'], 10) || 0;
      styleBorderTop = parseInt(document.defaultView.getComputedStyle(canvas(), null)['borderTopWidth'], 10) || 0;
      html = document.body.parentNode;
      htmlTop = html.offsetTop;
      htmlLeft = html.offsetLeft;
      offsetX += stylePaddingLeft + styleBorderLeft + htmlLeft;
      offsetY += stylePaddingTop + styleBorderTop + htmlTop;
    }
    mx = e.pageX - offsetX;
    my = e.pageY - offsetY;
    return {
      x: mx,
      y: my
    };
  };

}).call(this);
